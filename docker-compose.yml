version: "3.9"
services:
  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: moon_api
    env_file:
      - .env
    environment:
      - POSTGRES_HOST=db
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_NAME}
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    volumes:
      - .:/app
      - /app/node_modules
    command: /bin/sh -c "rm -f tmp/pids/server.pid && npm run migrate && yarn start"
    ports:
      - "3000:3000"
    networks:
      - moon_link
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy

  # Define the Postgres service
  db:
    image: postgres:14.8
    restart: always
    container_name: moon_db
    env_file:
      - .env
    environment:
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_NAME}
      - POSTGRES_HOST_AUTH_METHOD=md5
      - PGDATA=/var/lib/postgresql/data/pgdata
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - '15432:5432'
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d moon -U root"]
      interval: 1s
      timeout: 3s
      retries: 10
      start_period: 5s
    networks:
      - moon_link

  # Define the Redis service
  redis:
    image: redis:5.0-alpine
    container_name: moon_redis
    volumes:
      - redis:/data
    ports:
      - "63799:6379"
    healthcheck:
      test: redis-cli ping
      interval: 1s
      timeout: 3s
      retries: 30
    networks:
      - moon_link
volumes:
  postgres:
  redis:
  postgres_data:

# docker network create moon_link
networks:
  moon_link:
    external: true
